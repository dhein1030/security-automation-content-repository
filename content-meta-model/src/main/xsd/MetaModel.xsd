<?xml version="1.0" encoding="UTF-8"?>
<!--
  The MIT License
  
  Copyright (c) 2011 David Waltermire
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://scapdev.org/schema/meta-model/0.1"
  xmlns:tns="http://scapdev.org/schema/meta-model/0.1"
  targetNamespace="http://scapdev.org/schema/meta-model/0.1" elementFormDefault="qualified"
  attributeFormDefault="unqualified" version="0.1">

  <xs:element name="meta-model">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="schemas">
          <xs:complexType>
            <xs:sequence>
              <xs:element ref="schema" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
    
    <xs:key name="SchemaKey">
      <xs:selector xpath=".//tns:schema"/>
      <xs:field xpath="@id"/>
    </xs:key>

    <xs:key name="EntityKey">
      <xs:selector xpath=".//tns:schema/tns:entities/tns:entity"/>
      <xs:field xpath="@id"/>
    </xs:key>
    <xs:keyref name="EntityKeyRef" refer="EntityKey">
      <xs:selector xpath=".//tns:entity-ref"/>
      <xs:field xpath="@id-ref"/>
    </xs:keyref>

    <xs:key name="KeyKey">
      <xs:selector xpath=".//tns:schema/tns:entities/tns:entity/tns:key"/>
      <xs:field xpath="@id"/>
    </xs:key>
    <xs:keyref name="KeyKeyRef" refer="KeyKey">
      <xs:selector xpath=".//tns:key-ref"/>
      <xs:field xpath="@id-ref"/>
    </xs:keyref>

    <xs:key name="FieldKey">
      <xs:selector xpath=".//tns:field"/>
      <xs:field xpath="@id"/>
    </xs:key>
    <xs:keyref name="FieldKeyRef" refer="FieldKey">
      <xs:selector xpath=".//tns:field-ref"/>
      <xs:field xpath="@id-ref"/>
    </xs:keyref>
    <!-- TODO: write a schematron that enforces key/key-ref field/field-ref -->

    <xs:key name="RelationshipKey">
      <xs:selector xpath=".//tns:schema/tns:relationships/tns:relationship"/>
      <xs:field xpath="@id"/>
    </xs:key>
    <xs:unique name="KeyRefUnique">
      <xs:selector xpath=".//tns:key-ref"/>
      <xs:field xpath="@id"/>
    </xs:unique>
    <xs:unique name="FieldRefUnique">
      <xs:selector xpath=".//tns:field-ref"/>
      <xs:field xpath="@id"/>
    </xs:unique>
    
    <xs:key name="DocumentKey">
      <xs:selector xpath=".//tns:schema/tns:documents/tns:document"/>
      <xs:field xpath="@id"/>
    </xs:key>
  </xs:element>

  <xs:complexType name="ComponentType">
    <xs:attribute name="id" type="ComponentIdType" use="required"/>
  </xs:complexType>

  <xs:complexType name="SchemaComponentType">
    <xs:complexContent>
      <xs:extension base="ComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="ComponentIdType">
    <xs:restriction base="xs:anyURI">
      <xs:pattern value="urn:scap-content:[a-z-]+:[a-z][a-z0-9.-_]+:[a-z][a-z0-9-]+"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- ********************************************************************** -->
  <!-- * Schema                                                             * -->
  <!-- ********************************************************************** -->
  <xs:simpleType name="SchemaComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:schema:.+"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="SchemaSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="SchemaComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="schema" type="SchemaType"/>
  <xs:complexType name="SchemaType">
    <xs:complexContent>
      <xs:extension base="SchemaSchemaComponentType">
        <xs:sequence>
          <xs:element name="entities">
            <xs:complexType>
              <xs:sequence>
                <xs:element ref="entity" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="relationships">
            <xs:complexType>
              <xs:sequence>
                <xs:element ref="relationship" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="documents">
            <xs:complexType>
              <xs:sequence>
                <xs:element ref="document" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="namespace" type="xs:anyURI" use="required"/>
        <xs:attribute name="schemaLocation" type="xs:anyURI" use="required"/>
        <xs:attribute name="prefix" type="xs:NCName"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- ********************************************************************** -->
  <!-- * Entity                                                             * -->
  <!-- ********************************************************************** -->
  <xs:simpleType name="EntityComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:entity:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="EntitySchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="EntityComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="entity" type="EntityType"/>
  <xs:complexType name="EntityType">
    <xs:complexContent>
      <xs:extension base="EntitySchemaComponentType">
        <xs:sequence>
          <xs:element ref="key"/>
        </xs:sequence>
        <xs:attribute name="local-part" type="xs:NCName"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- ********************************************************************** -->
  <!-- * Document Entity                                                    * -->
  <!-- ********************************************************************** -->
  <xs:simpleType name="DocumentComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:document:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="DocumentSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="DocumentComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="document" type="DocumentEntityType"/>
  <xs:complexType name="DocumentEntityType">
    <xs:complexContent>
      <xs:extension base="DocumentSchemaComponentType">
        <xs:sequence>
          <xs:element ref="document-model"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="SchemaReferenceType">
    <xs:attribute name="node" use="required"/>
  </xs:complexType>

  <xs:element name="schema-node" type="SchemaReferenceType"/>

  <xs:element name="entity-ref" type="EntityIdRefType"/>
  <xs:complexType name="EntityIdRefType">
    <xs:attribute name="id-ref" type="ComponentIdType"/>
  </xs:complexType>

  <!-- Keys -->
  <xs:simpleType name="KeyComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:key:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="KeyComponentType">
    <xs:complexContent>
      <xs:restriction base="ComponentType">
        <xs:attribute name="id" type="KeyComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:element name="key" type="KeyType"/>
  <xs:complexType name="KeyType">
    <xs:complexContent>
      <xs:extension base="KeyComponentType">
        <xs:sequence>
          <xs:element name="field" type="FieldType" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Key Fields -->
  <xs:simpleType name="FieldComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:field:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="FieldSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="FieldComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:complexContent>
      <xs:extension base="FieldSchemaComponentType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Document models -->
  <xs:element name="document-model" type="DocumentModelType" abstract="true"/>
  <xs:complexType name="DocumentModelType"/>

  <xs:element name="generated-document-model" type="GeneratedDocumentModelType"
    substitutionGroup="document-model"/>
  <xs:complexType name="GeneratedDocumentModelType">
    <xs:complexContent>
      <xs:extension base="DocumentModelType">
        <xs:sequence>
          <xs:element name="entity-container" type="EntityContainerType" maxOccurs="unbounded"/>
          <xs:element ref="generated-property" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="ContainerComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:container:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="ContainerSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="ContainerComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EntityContainerType">
    <xs:complexContent>
      <xs:extension base="ContainerSchemaComponentType">
        <xs:sequence>
          <xs:element ref="entity-schema-node"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EntityNodeReferenceType">
    <xs:complexContent>
      <xs:extension base="SchemaReferenceType">
        <xs:sequence>
          <xs:element ref="entity-ref" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="entity-schema-node" type="EntityNodeReferenceType"/>

  <xs:complexType name="GeneratedPropertyType">
    <xs:sequence>
      <xs:element ref="schema-node"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="generated-property" type="GeneratedPropertyType"/>

  <!-- ********************************************************************** -->
  <!-- * Relationship                                                       * -->
  <!-- ********************************************************************** -->
  <xs:simpleType name="RelationshipComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:relationship:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="RelationshipSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="RelationshipComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RelationshipType" abstract="true">
    <xs:complexContent>
      <xs:extension base="RelationshipSchemaComponentType">
        <xs:sequence>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="relationship" type="RelationshipType" abstract="true"/>

  <!-- Key Refs -->
  <xs:simpleType name="KeyRefComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:key-ref:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="KeyRefComponentType">
    <xs:complexContent>
      <xs:restriction base="ComponentType">
        <xs:attribute name="id" type="KeyRefComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="KeyRefType">
    <xs:complexContent>
      <xs:extension base="KeyRefComponentType">
        <xs:sequence>
          <xs:element name="field-ref" type="FieldRefType" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id-ref" type="KeyComponentIdType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- Key Fields -->
  <xs:simpleType name="FieldRefComponentIdType">
    <xs:restriction base="ComponentIdType">
      <xs:pattern value="urn:scap-content:field-ref:.+"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="FieldRefSchemaComponentType">
    <xs:complexContent>
      <xs:restriction base="SchemaComponentType">
        <xs:sequence>
          <xs:element ref="schema-node"/>
        </xs:sequence>
        <xs:attribute name="id" type="FieldRefComponentIdType" use="required"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="FieldRefType">
    <xs:complexContent>
      <xs:extension base="FieldRefSchemaComponentType">
        <xs:attribute name="id-ref" type="FieldComponentIdType" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  

  <xs:complexType name="LocalRelationshipType">
    <xs:complexContent>
      <xs:extension base="RelationshipType">
        <xs:sequence>
          <xs:element name="key-ref" type="KeyRefType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="local-relationship" type="LocalRelationshipType"
    substitutionGroup="relationship"/>

  <xs:complexType name="ExternalRelationshipType" abstract="true">
    <xs:complexContent>
      <xs:extension base="RelationshipType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DirectExternalRelationshipType">
    <xs:complexContent>
      <xs:extension base="ExternalRelationshipType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="direct-external-relationship" type="DirectExternalRelationshipType"
    substitutionGroup="relationship"/>

  <xs:complexType name="IndirectExternalRelationshipType">
    <xs:complexContent>
      <xs:extension base="ExternalRelationshipType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="indirect-external-relationship" type="IndirectExternalRelationshipType"
    substitutionGroup="relationship"/>
</xs:schema>
