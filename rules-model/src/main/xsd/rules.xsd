<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://scap.nist.gov/schema/content-rules/0.1"
    xmlns:tns="http://scap.nist.gov/schema/content-rules/0.1"
    targetNamespace="http://scap.nist.gov/schema/content-rules/0.1"
    elementFormDefault="qualified" attributeFormDefault="unqualified">
    
    <!-- ******************************************************************* -->
    <!-- * Rules                                                           * -->
    <!-- ******************************************************************* -->
    <xs:element name="rules" type="RulesType">
        <xs:key name="ExternalIdentifierKey">
            <xs:selector xpath="tns:external-identifiers/tns:external-identifier"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="ExternalIdentifierRefKey" refer="ExternalIdentifierKey">
            <xs:selector xpath=".//tns:external-identifier"/>
            <xs:field xpath="@ref-id"/>
        </xs:keyref>

        <xs:key name="SchemaKey">
            <xs:selector xpath="tns:schema"/>
            <xs:field xpath="@id"/>
        </xs:key>

        <xs:key name="KeyKey">
            <xs:selector xpath="tns:schema/tns:key"/>
            <xs:field xpath="@id"/>
        </xs:key>

        <xs:keyref name="KeyRefRefIdKeyRef" refer="KeyKey" >
            <xs:selector xpath="tns:schema/tns:keyed-relationship/tns:key-ref"/>
            <xs:field xpath="@ref-id"/>
        </xs:keyref>
        
        <xs:key name="EntityKey">
            <xs:selector xpath="tns:schema/tns:indexed-document|tns:schema/tns:generated-document|tns:schema/tns:content-node"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="EntityKeyRef" refer="EntityKey">
            <xs:selector xpath=".//tns:content-mapping/tns:default|.//tns:content-mapping/tns:qname-mapping|.//tns:entity-ref"/>
            <xs:field xpath="@ref-id"/>
        </xs:keyref>
        
        <xs:key name="RelationshipKey">
            <xs:selector xpath="tns:schema/tns:boundary-relationship|tns:schema/tns:keyed-relationship"/>
            <xs:field xpath="@id"/>
        </xs:key>
    </xs:element>
    <xs:complexType name="RulesType">
        <xs:sequence>
            <xs:element ref="external-identifiers" minOccurs="0"/>
            <xs:element ref="schema" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <!-- ******************************************************************* -->
    <!-- * External identifiers                                                          * -->
    <!-- ******************************************************************* -->
    <xs:element name="external-identifiers" type="ExternalIdentifiersType"/>
    <xs:complexType name="ExternalIdentifiersType">
        <xs:sequence>
            <xs:element ref="external-identifier" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="external-identifier" type="ExternalIdentifierType"/>
    <xs:complexType name="ExternalIdentifierType">
        <xs:sequence>
            <xs:element ref="pattern"/>
        </xs:sequence>
        <xs:attribute name="id" type="ExternalIdentifierIdType" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="ExternalIdentifierIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:external-identifier:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- ******************************************************************* -->
    <!-- * Schema                                                          * -->
    <!-- ******************************************************************* -->
    <xs:element name="schema" type="SchemaType">
        <xs:key name="SchemaFocusedKeyKey">
            <xs:selector xpath="tns:key"/>
            <xs:field xpath="@id"/>
        </xs:key>
        <xs:keyref name="SchemaFocusedKeyRefIdKeyRef" refer="SchemaFocusedKeyKey" >
            <xs:selector xpath="tns:indexed-document/tns:key|tns:content-node/tns:key"/>
            <xs:field xpath="@ref-id"/>
        </xs:keyref>
    </xs:element>
    <xs:complexType name="SchemaType">
        <xs:sequence>
            <xs:element ref="key" maxOccurs="unbounded"/>
            <xs:element ref="key-ref" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="content-node" minOccurs="0" maxOccurs="unbounded"/>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="indexed-document"/>
                <xs:element ref="generated-document"/>
            </xs:choice>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="boundary-relationship"/>
                <xs:element ref="keyed-relationship"/>
                <xs:element ref="indirect-relationship"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="SchemaIdType" use="required"/>
        <xs:attribute name="namespace" type="xs:anyURI" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="SchemaIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:schema:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- ******************************************************************* -->
    <!-- * Key                                                             * -->
    <!-- ******************************************************************* -->
    <xs:element name="key" type="KeyType">
        <xs:unique name="FieldNameUnique">
            <xs:selector xpath="tns:xpath-field|tns:delegate-field"></xs:selector>
            <xs:field xpath="@name"></xs:field>
        </xs:unique>
    </xs:element>
    <xs:complexType name="KeyType">
        <xs:sequence>
            <xs:element ref="field" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="KeyIdType" use="required"/>
    </xs:complexType>        
    
    <xs:simpleType name="KeyIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:key:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="field" type="FieldType"/>
    <xs:complexType name="FieldType">
        <xs:sequence>
            <xs:choice>
                <xs:element ref="xpath"/>
                <xs:element name="key-ref" type="KeyFieldRefType"/>
            </xs:choice>
            <xs:element ref="pattern" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="KeyFieldNameType" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="KeyFieldNameType">
        <xs:restriction base="xs:NCName"/>
    </xs:simpleType>

    <!-- ******************************************************************* -->
    <!-- * Key References                                                  * -->
    <!-- ******************************************************************* -->
    <xs:complexType name="KeyRefType">
        <xs:attribute name="ref-id" type="KeyIdType" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="KeyFieldRefType">
        <xs:complexContent>
            <xs:extension base="KeyRefType">
                <xs:attribute name="field" type="KeyFieldNameType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="key-ref" type="KeyRefDefinitionType"/>
    <xs:complexType name="KeyRefDefinitionType">
        <xs:complexContent>
            <xs:extension base="KeyRefType">
                <xs:sequence>
                    <xs:element ref="field" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- ******************************************************************* -->
    <!-- * Content Node                                                    * -->
    <!-- ******************************************************************* -->
    <xs:element name="content-node" type="ContentNodeType"/>
    <xs:complexType name="ContentNodeType">
        <xs:sequence>
            <xs:element name="key" type="KeyRefType"/>
        </xs:sequence>
        <xs:attribute name="id" type="ContentNodeIdType" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="ContentNodeIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:content-node:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- ******************************************************************* -->
    <!-- * Documents                                                       * -->
    <!-- ******************************************************************* -->
    <xs:complexType name="DocumentType">
        <xs:attribute name="id" type="DocumentIdType" use="required"/>
        <xs:attribute name="qname" type="xs:QName" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="DocumentIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:document:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="indexed-document" type="IndexedDocumentType" />
    <xs:complexType name="IndexedDocumentType">
        <xs:complexContent>
            <xs:extension base="DocumentType">
                <xs:sequence>
                    <xs:element name="key" type="KeyRefType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="generated-document" type="GeneratedDocumentType" />
    <xs:complexType name="GeneratedDocumentType">
        <xs:complexContent>
            <xs:extension base="DocumentType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- ******************************************************************* -->
    <!-- * Relationships                                                   * -->
    <!-- ******************************************************************* -->
    <xs:complexType name="RelationshipType">
        <xs:sequence>
            <xs:element name="entity-ref" type="EntityReferenceType" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="RelationshipIdType" use="required"/>
    </xs:complexType>
    
    <xs:simpleType name="RelationshipIdType">
        <xs:restriction base="DefinitionIdType">
            <xs:pattern value="urn:scap-content:relationship:.+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="boundary-relationship" type="BoundaryRelationshipType"/>
    <xs:complexType name="BoundaryRelationshipType">
        <xs:complexContent>
            <xs:extension base="RelationshipType">
                <xs:sequence>
                    <xs:element ref="xpath"/>
                    <xs:element ref="content-mapping"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="content-mapping" type="ContentMappingType"/>
    <xs:complexType name="ContentMappingType">
        <xs:sequence>
            <xs:element name="default" type="EntityReferenceType" minOccurs="0"/>
            <xs:element name="qname-mapping" type="EntityQNameMappingType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EntityReferenceType">
        <xs:attribute name="ref-id" type="EntityIdType" use="required"/>
    </xs:complexType>

    <xs:complexType name="EntityQNameMappingType">
        <xs:complexContent>
            <xs:extension base="EntityReferenceType">
                <xs:attribute name="qname" type="xs:QName" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="keyed-relationship" type="KeyedRelationshipType"/>
    <xs:complexType name="KeyedRelationshipType">
        <xs:complexContent>
            <xs:extension base="RelationshipType">
                <xs:sequence>
                    <xs:element ref="xpath" minOccurs="0"/>
                    <xs:element ref="key-ref"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="indirect-relationship" type="IndirectRelationshipType"/>
    <xs:complexType name="IndirectRelationshipType">
        <xs:complexContent>
            <xs:extension base="RelationshipType">
                <xs:sequence>
                    <xs:element ref="xpath" minOccurs="0"/>
                    <xs:element name="value" type="XPathNodeType"/>
                    <xs:choice>
                        <xs:element name="external-identifier" type="ExternalIdentifierRefType"/>
                        <xs:element name="qualifier-mapping" type="QualifierMappingType">
                            <xs:unique name="unique-external-identifer-qualifier">
                                <xs:selector xpath="tns:external-identifier"/>
                                <xs:field xpath="@ref-id"/>
                                <xs:field xpath="@qualifier-value"/>
                            </xs:unique>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="XPathNodeType">
        <xs:sequence>
            <xs:element ref="xpath"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExternalIdentifierRefType">
        <xs:attribute name="ref-id" type="ExternalIdentifierIdType" use="required"/>
    </xs:complexType>

    <xs:complexType name="QualifierMappingType">
        <xs:sequence>
            <xs:element ref="xpath"/>
            <xs:element name="external-identifier" type="ExternalIdentifierRefMappingType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExternalIdentifierRefMappingType">
        <xs:complexContent>
            <xs:extension base="ExternalIdentifierRefType">
                <xs:attribute name="qualifier-value" type="xs:anyURI"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- ******************************************************************* -->
    <!-- * General Complex types                                           * -->
    <!-- ******************************************************************* -->
    <xs:element name="xpath" type="XPathType"/>
    <xs:complexType name="XPathType">
        <xs:attribute name="expression" type="XPathExpressionType" use="required"/>
    </xs:complexType>

    <xs:element name="pattern" type="RegexType"/>
    <xs:complexType name="RegexType">
        <xs:attribute name="expression" type="RegexExpressionType" use="required"/>
    </xs:complexType>
    
    <!-- ******************************************************************* -->
    <!-- * General Simple types                                            * -->
    <!-- ******************************************************************* -->
    <xs:simpleType name="XPathExpressionType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
    <xs:simpleType name="RegexExpressionType">
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    
    <xs:simpleType name="DefinitionIdType">
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="urn:scap-content:[a-z\-]+:[a-z][a-z0-9.\-_]+:[a-z][a-z0-9.\-_]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EntityIdType">
        <xs:union memberTypes="DefinitionIdType ContentNodeIdType"/>
    </xs:simpleType>
</xs:schema>
